apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                GETUI_APP_ID    : "W08R3e4zEl5XMu0SdESN27",
                GETUI_APP_KEY   : "QRNX2agVfC9QkLuMel18J5",
                GETUI_APP_SECRET: "smKxVFGEDc6h2F8NYHE1K8",
                PACKAGE_NAME    : applicationId
        ]


    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.libAppCompatVersion
    implementation rootProject.ext.dependencies.libConstraintLayoutVersion
    implementation rootProject.ext.dependencies.libSupportVersion
    implementation rootProject.ext.dependencies.libButterKnifeVersion
    annotationProcessor rootProject.ext.dependencies.libButterKnifeCompilerVersion
    implementation rootProject.ext.dependencies.libRecyclerViewVersion
    implementation rootProject.ext.dependencies.libDesignVersion
    implementation rootProject.ext.dependencies.libQiujuerUIVersion
    implementation rootProject.ext.dependencies.libQiujuerResVersion
    implementation rootProject.ext.dependencies.libQiujuerKitHandlerVersion
    implementation rootProject.ext.dependencies.libGlideVersion
    implementation rootProject.ext.dependencies.libEasyPMVersion
    implementation rootProject.ext.dependencies.libGeTuiVersion
    implementation rootProject.ext.dependencies.libAirPanelVersion

    debugImplementation rootProject.ext.dependencies.libPandoraLib
    releaseImplementation rootProject.ext.dependencies.libPandoraNoOpLib

//    compile(rootProject.ext.dependencies.libEasyPMVersion) {
//        exclude group: 'com.android.support', module: 'design'
//    }

    implementation(rootProject.ext.dependencies.libCropImageVersion) {
        exclude module: 'constraint-layout'
        transitive false
    }

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation project(':factory')
    testImplementation 'junit:junit:4.12'
}
